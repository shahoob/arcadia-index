/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/affiliated-artists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["add_affiliated_artists"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/artist": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_artist_publications"];
        put?: never;
        post: operations["add_artist"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/edition-group": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["add_edition_group"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/invitation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["send_invitation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/master-group": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["add_master_group"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_me"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["register"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/report/torrent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["add_torrent_report"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/search/artist/lite": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Case insensitive */
        get: operations["get_artists_lite"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/search/torrent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["find_torrents"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/series": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_series"];
        put?: never;
        post: operations["add_series"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/subscription": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["add_subscription"];
        delete: operations["remove_subscription"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/title-group": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_title_group"];
        put?: never;
        post: operations["add_title_group"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/title-group-comment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["add_title_group_comment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/title-group/lite": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_title_group_info_lite"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/torrent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["download_dottorrent_file"];
        put?: never;
        post: operations["upload_torrent"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/torrent-request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["add_torrent_request"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/torrent-request/vote": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["add_torrent_request_vote"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_user"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AffiliatedArtist: {
            /** Format: int64 */
            artist_id: number;
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            nickname?: string | null;
            roles: components["schemas"]["ArtistRole"][];
            /** Format: int64 */
            title_group_id: number;
        };
        AffiliatedArtistHierarchy: {
            artist: components["schemas"]["Artist"];
            /** Format: int64 */
            artist_id: number;
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            nickname?: string | null;
            roles: components["schemas"]["ArtistRole"][];
            /** Format: int64 */
            title_group_id: number;
        };
        Artist: {
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            description: string;
            /** Format: int32 */
            edition_groups_amount: number;
            /** Format: int64 */
            id: number;
            /** Format: int32 */
            leechers_amount: number;
            name: string;
            pictures: string[];
            /** Format: int32 */
            seeders_amount: number;
            /** Format: int32 */
            snatches_amount: number;
            /** Format: int32 */
            title_groups_amount: number;
            /** Format: int32 */
            torrents_amount: number;
        };
        ArtistAndTitleGroupsLite: {
            artist: components["schemas"]["Artist"];
            title_groups: components["schemas"]["TitleGroupHierarchyLite"][];
        };
        ArtistLite: {
            /** Format: int64 */
            id: number;
            name: string;
            pictures: string[];
        };
        /** @enum {string} */
        ArtistRole: "main" | "producer" | "guest" | "composer" | "conductor" | "dj_compiler" | "remixer" | "arranger" | "director" | "cinematographer" | "actor" | "author";
        /** @enum {string} */
        AudioBitrateSampling: "192" | "256" | "320" | "APS (VBR)" | "V2 (VBR)" | "V1 (VBR)" | "APX (VBR)" | "V0 (VBR)" | "Lossless" | "24bit Lossless" | "DSD64" | "DSD128" | "DSD256" | "DSD512" | "Other";
        /** @enum {string} */
        AudioChannels: "1.0" | "2.0" | "2.1" | "5.0" | "5.1" | "7.1";
        /** @enum {string} */
        AudioCodec: "mp2" | "mp3" | "aac" | "ac3" | "dts" | "flac" | "pcm" | "true-hd" | "opus" | "dsd";
        /** @enum {string} */
        ContentType: "movie" | "tv_show" | "music" | "software" | "book" | "collection";
        DownloadTorrentQuery: {
            /** Format: int64 */
            id: number;
        };
        EditionGroup: {
            additional_information: {
                [key: string]: string;
            };
            covers: string[];
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            description?: string | null;
            distributor?: string | null;
            external_links: string[];
            /** Format: int64 */
            id: number;
            name: string;
            /** Format: date-time */
            release_date: string;
            source?: null | components["schemas"]["Source"];
            /** Format: int64 */
            title_group_id: number;
            /** Format: date-time */
            updated_at: string;
        };
        EditionGroupHierarchy: {
            additional_information: {
                [key: string]: string;
            };
            covers: string[];
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            description?: string | null;
            distributor?: string | null;
            external_links: string[];
            /** Format: int64 */
            id: number;
            name: string;
            /** Format: date-time */
            release_date: string;
            source?: null | components["schemas"]["Source"];
            /** Format: int64 */
            title_group_id: number;
            torrents: components["schemas"]["TorrentHierarchy"][];
            /** Format: date-time */
            updated_at: string;
        };
        EditionGroupHierarchyLite: {
            additional_information: {
                [key: string]: string;
            };
            covers: string[];
            distributor?: string | null;
            /** Format: int64 */
            id: number;
            name: string;
            /** Format: date-time */
            release_date: string;
            source?: null | components["schemas"]["Source"];
            /** Format: int64 */
            title_group_id: number;
            torrents: components["schemas"]["TorrentHierarchyLite"][];
        };
        EditionGroupInfoLite: {
            additional_information: {
                [key: string]: string;
            };
            distributor?: string | null;
            /** Format: int64 */
            id: number;
            name: string;
            /** Format: date-time */
            release_date: string;
            source?: null | components["schemas"]["Source"];
        };
        /** @enum {string} */
        Features: "HDR" | "DV" | "Commentary" | "Remux" | "3D" | "Booklet" | "Cue";
        GetArtistPublicationsQuery: {
            /** Format: int64 */
            id: number;
        };
        Invitation: {
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            expires_at: string;
            /** Format: int64 */
            id: number;
            invitation_key: string;
            message: string;
            receiver_email: string;
            /** Format: int64 */
            receiver_id?: number | null;
            /** Format: int64 */
            sender_id: number;
        };
        /** @enum {string} */
        Language: "English" | "French" | "German" | "Italian" | "Spanish" | "Swedish";
        Login: {
            password: string;
            remember_me: boolean;
            username: string;
        };
        MasterGroup: {
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            /** Format: int64 */
            id: number;
            name?: string | null;
            /** Format: date-time */
            updated_at: string;
        };
        /** @enum {string} */
        Platform: "Windows" | "Linux" | "MacOS" | "Xbox";
        PublicUser: {
            /** Format: int64 */
            artist_comments: number;
            avatar?: string | null;
            /** Format: int64 */
            average_seeding_time: number;
            /** Format: int64 */
            bonus_points: number;
            class: string;
            /** Format: int64 */
            collages_started: number;
            /** Format: date-time */
            created_at: string;
            description: string;
            /** Format: int64 */
            downloaded: number;
            /** Format: int32 */
            forum_posts: number;
            /** Format: int32 */
            forum_threads: number;
            /** Format: int32 */
            group_comments: number;
            /** Format: int64 */
            id: number;
            /** Format: int32 */
            invitations: number;
            /** Format: int64 */
            invited: number;
            /** Format: date-time */
            last_seen: string;
            /** Format: int32 */
            leeching: number;
            /** Format: double */
            ratio: number;
            /** Format: int64 */
            real_downloaded: number;
            /** Format: int64 */
            real_uploaded: number;
            /** Format: int32 */
            request_comments: number;
            /** Format: int64 */
            requests_filled: number;
            /** Format: int64 */
            requests_voted: number;
            /** Format: double */
            required_ratio: number;
            /** Format: int32 */
            seeding: number;
            /** Format: int64 */
            seeding_size: number;
            /** Format: int32 */
            snatched: number;
            /** Format: int32 */
            torrent_comments: number;
            /** Format: int64 */
            uploaded: number;
            username: string;
        };
        Register: {
            email: string;
            password: string;
            password_verify: string;
            username: string;
        };
        RegisterQuery: {
            invitation_key?: string | null;
        };
        SentInvitation: {
            message: string;
            receiver_email: string;
        };
        Series: {
            banners?: string[] | null;
            covers: string[];
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            description: string;
            /** Format: int64 */
            id: number;
            name: string;
            tags: string[];
            /** Format: date-time */
            updated_at: string;
        };
        SeriesAndTitleGroupHierarchyLite: {
            series: components["schemas"]["Series"];
            title_groups: components["schemas"]["TitleGroupHierarchyLite"][];
        };
        SeriesLite: {
            /** Format: int64 */
            id: number;
            name: string;
        };
        /** @enum {string} */
        Source: "CD" | "DVD5" | "DVD9" | "Vinyl" | "Web" | "Soundboard" | "SACD" | "DAT" | "Cassette" | "Blu-Ray" | "LaserDisc" | "HD-DVD" | "HDTV" | "PDTV" | "TV" | "VHS" | "Mixed" | "Physical Book";
        TitleGroup: {
            category?: null | components["schemas"]["TitleGroupCategory"];
            content_type: components["schemas"]["ContentType"];
            country_from?: string | null;
            covers: string[];
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            description: string;
            embedded_links: {
                [key: string]: string;
            };
            external_links: string[];
            /** Format: int64 */
            id: number;
            /** Format: int64 */
            master_group_id?: number | null;
            name: string;
            name_aliases: string[];
            original_language?: string | null;
            /** Format: date-time */
            original_release_date: string;
            platform?: null | components["schemas"]["Platform"];
            public_ratings: {
                [key: string]: string;
            };
            screenshots: string[];
            /** Format: int64 */
            series_id?: number | null;
            tagline?: string | null;
            tags: string[];
            /** Format: date-time */
            updated_at: string;
        };
        TitleGroupAndAssociatedData: {
            affiliated_artists: components["schemas"]["AffiliatedArtistHierarchy"][];
            category?: null | components["schemas"]["TitleGroupCategory"];
            content_type: components["schemas"]["ContentType"];
            country_from?: string | null;
            covers: string[];
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            description: string;
            edition_groups: components["schemas"]["EditionGroupHierarchy"][];
            embedded_links: {
                [key: string]: string;
            };
            external_links: string[];
            /** Format: int64 */
            id: number;
            in_same_master_group: components["schemas"]["TitleGroupLite"][];
            is_subscribed: boolean;
            /** Format: int64 */
            master_group_id?: number | null;
            name: string;
            name_aliases: string[];
            original_language?: string | null;
            /** Format: date-time */
            original_release_date: string;
            platform?: null | components["schemas"]["Platform"];
            public_ratings: {
                [key: string]: string;
            };
            screenshots: string[];
            series: components["schemas"]["SeriesLite"];
            /** Format: int64 */
            series_id?: number | null;
            tagline?: string | null;
            tags: string[];
            title_group_comments: components["schemas"]["TitleGroupCommentHierarchy"][];
            torrent_requests: components["schemas"]["TorrentRequest"][];
            /** Format: date-time */
            updated_at: string;
        };
        /** @enum {string} */
        TitleGroupCategory: "Ep" | "Album" | "Single" | "Soundtrack" | "Anthology" | "Compilation" | "Remix" | "Bootleg" | "Mixtape" | "ConcertRecording" | "DjMix" | "FeatureFilm" | "ShortFilm" | "Game" | "Program" | "Illustrated" | "Periodical" | "Book" | "Article" | "Manual" | "Other";
        TitleGroupComment: {
            /** Format: int64 */
            answers_to_comment_id?: number | null;
            content: string;
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            /** Format: int64 */
            id: number;
            /** Format: int64 */
            refers_to_torrent_id?: number | null;
            /** Format: int64 */
            title_group_id: number;
            /** Format: date-time */
            updated_at: string;
        };
        TitleGroupCommentHierarchy: {
            /** Format: int64 */
            answers_to_comment_id?: number | null;
            content: string;
            /** Format: date-time */
            created_at: string;
            created_by: components["schemas"]["UserLiteAvatar"];
            /** Format: int64 */
            created_by_id: number;
            /** Format: int64 */
            id: number;
            /** Format: int64 */
            refers_to_torrent_id?: number | null;
            /** Format: int64 */
            title_group_id: number;
            /** Format: date-time */
            updated_at: string;
        };
        TitleGroupHierarchy: {
            category?: null | components["schemas"]["TitleGroupCategory"];
            content_type: components["schemas"]["ContentType"];
            country_from?: string | null;
            covers: string[];
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            description: string;
            edition_groups: components["schemas"]["EditionGroupHierarchy"][];
            embedded_links: {
                [key: string]: string;
            };
            external_links: string[];
            /** Format: int64 */
            id: number;
            /** Format: int64 */
            master_group_id?: number | null;
            name: string;
            name_aliases: string[];
            original_language?: string | null;
            /** Format: date-time */
            original_release_date: string;
            platform?: null | components["schemas"]["Platform"];
            public_ratings: {
                [key: string]: string;
            };
            screenshots: string[];
            /** Format: int64 */
            series_id?: number | null;
            tagline?: string | null;
            tags: string[];
            /** Format: date-time */
            updated_at: string;
        };
        TitleGroupHierarchyLite: {
            category?: null | components["schemas"]["TitleGroupCategory"];
            content_type: components["schemas"]["ContentType"];
            covers: string[];
            edition_groups: components["schemas"]["EditionGroupHierarchyLite"][];
            /** Format: int64 */
            id: number;
            name: string;
            /** Format: date-time */
            original_release_date: string;
            tags: string[];
        };
        TitleGroupLite: {
            content_type: components["schemas"]["ContentType"];
            edition_groups: components["schemas"]["EditionGroupInfoLite"][];
            /** Format: int64 */
            id: number;
            name: string;
            platform?: null | components["schemas"]["Platform"];
        };
        Torrent: {
            /** Format: int32 */
            audio_bitrate?: number | null;
            audio_bitrate_sampling?: null | components["schemas"]["AudioBitrateSampling"];
            audio_channels?: null | components["schemas"]["AudioChannels"];
            audio_codec?: null | components["schemas"]["AudioCodec"];
            container: string;
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            description?: string | null;
            /** Format: double */
            download_factor: number;
            /** Format: int32 */
            duration?: number | null;
            /** Format: int64 */
            edition_group_id: number;
            features?: components["schemas"]["Features"][] | null;
            file_amount_per_type: {
                [key: string]: string;
            };
            file_list: {
                [key: string]: string;
            };
            /** Format: int64 */
            id: number;
            languages?: components["schemas"]["Language"][] | null;
            mediainfo: string;
            release_group?: string | null;
            release_name?: string | null;
            /** Format: int64 */
            size: number;
            staff_checked: boolean;
            subtitle_languages?: components["schemas"]["Language"][] | null;
            trumpable?: string | null;
            /** Format: date-time */
            updated_at: string;
            /** Format: double */
            upload_factor: number;
            uploaded_as_anonymous: boolean;
            video_codec?: null | components["schemas"]["VideoCodec"];
            video_resolution?: string | null;
        };
        TorrentHierarchy: {
            /** Format: int32 */
            audio_bitrate?: number | null;
            audio_bitrate_sampling?: null | components["schemas"]["AudioBitrateSampling"];
            audio_channels?: null | components["schemas"]["AudioChannels"];
            audio_codec?: null | components["schemas"]["AudioCodec"];
            container: string;
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            description?: string | null;
            /** Format: double */
            download_factor: number;
            /** Format: int32 */
            duration?: number | null;
            /** Format: int64 */
            edition_group_id: number;
            features?: components["schemas"]["Features"][] | null;
            file_amount_per_type: {
                [key: string]: string;
            };
            file_list: {
                [key: string]: string;
            };
            /** Format: int64 */
            id: number;
            languages?: components["schemas"]["Language"][] | null;
            mediainfo: string;
            release_group?: string | null;
            release_name?: string | null;
            reports: components["schemas"]["TorrentReport"][];
            /** Format: int64 */
            size: number;
            staff_checked: boolean;
            subtitle_languages?: components["schemas"]["Language"][] | null;
            trumpable?: string | null;
            /** Format: date-time */
            updated_at: string;
            /** Format: double */
            upload_factor: number;
            uploaded_as_anonymous: boolean;
            uploader: components["schemas"]["UserLite"];
            video_codec?: null | components["schemas"]["VideoCodec"];
            video_resolution?: string | null;
        };
        TorrentHierarchyLite: {
            /** Format: int32 */
            audio_bitrate?: number | null;
            audio_bitrate_sampling?: null | components["schemas"]["AudioBitrateSampling"];
            audio_channels?: string | null;
            audio_codec?: null | components["schemas"]["AudioCodec"];
            container: string;
            /** Format: date-time */
            created_at: string;
            /** Format: double */
            download_factor: number;
            /** Format: int32 */
            duration?: number | null;
            /** Format: int64 */
            edition_group_id: number;
            features?: components["schemas"]["Features"][] | null;
            file_amount_per_type: {
                [key: string]: string;
            };
            /** Format: int64 */
            id: number;
            languages?: components["schemas"]["Language"][] | null;
            release_name?: string | null;
            reports: components["schemas"]["TorrentReport"][];
            /** Format: int64 */
            size: number;
            staff_checked: boolean;
            subtitle_languages?: components["schemas"]["Language"][] | null;
            trumpable?: string | null;
            /** Format: double */
            upload_factor: number;
            video_codec?: null | components["schemas"]["VideoCodec"];
            video_resolution?: string | null;
        };
        TorrentReport: {
            description: string;
            /** Format: int64 */
            id: number;
            /** Format: date-time */
            reported_at: string;
            /** Format: int64 */
            reported_by_id: number;
            /** Format: int64 */
            reported_torrent_id: number;
        };
        TorrentRequest: {
            audio_channels?: string | null;
            audio_codec?: null | components["schemas"]["AudioCodec"];
            /** Format: int64 */
            bounty_bonus_points: number;
            /** Format: int64 */
            bounty_upload: number;
            container: string;
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            description?: string | null;
            edition_name?: string | null;
            features?: components["schemas"]["Features"][] | null;
            /** Format: int64 */
            id: number;
            languages?: components["schemas"]["Language"][] | null;
            release_group?: string | null;
            subtitle_languages?: components["schemas"]["Language"][] | null;
            /** Format: int64 */
            title_group_id: number;
            /** Format: date-time */
            updated_at: string;
            video_codec?: null | components["schemas"]["VideoCodec"];
            video_resolution?: string | null;
        };
        TorrentRequestVote: {
            /** Format: int64 */
            bounty_bonus_points: number;
            /** Format: int64 */
            bounty_upload: number;
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by_id: number;
            /** Format: int64 */
            id: number;
            /** Format: int64 */
            torrent_request_id: number;
        };
        TorrentSearch: {
            title_group_name: string;
        };
        TorrentSearchResults: {
            title_groups: components["schemas"]["TitleGroupHierarchyLite"][];
        };
        UploadedTorrent: {
            /** Format: int32 */
            audio_bitrate: number;
            audio_bitrate_sampling: components["schemas"]["AudioBitrateSampling"];
            audio_channels: string;
            audio_codec: components["schemas"]["AudioCodec"];
            container: string;
            description: string;
            /** Format: int32 */
            duration: number;
            /** Format: int64 */
            edition_group_id: number;
            features: string;
            languages: string;
            mediainfo: string;
            release_group: string;
            release_name: string;
            subtitle_languages: string;
            /** Format: binary */
            torrent_file: string;
            uploaded_as_anonymous: boolean;
            video_codec: components["schemas"]["VideoCodec"];
            video_resolution: string;
        };
        User: {
            /** Format: int64 */
            artist_comments: number;
            avatar?: string | null;
            /** Format: int64 */
            average_seeding_time: number;
            /** Format: int64 */
            bonus_points: number;
            class: string;
            /** Format: int64 */
            collages_started: number;
            /** Format: date-time */
            created_at: string;
            description: string;
            /** Format: int64 */
            downloaded: number;
            email: string;
            /** Format: int32 */
            forum_posts: number;
            /** Format: int32 */
            forum_threads: number;
            /** Format: int32 */
            group_comments: number;
            /** Format: int64 */
            id: number;
            /** Format: int32 */
            invitations: number;
            /** Format: int64 */
            invited: number;
            /** Format: date-time */
            last_seen: string;
            /** Format: int32 */
            leeching: number;
            /** Format: int64 */
            passkey_lower: number;
            /** Format: int64 */
            passkey_upper: number;
            password_hash: string;
            /** Format: double */
            ratio: number;
            /** Format: int64 */
            real_downloaded: number;
            /** Format: int64 */
            real_uploaded: number;
            /** Format: 0.0.0.0 */
            registered_from_ip: string;
            /** Format: int32 */
            request_comments: number;
            /** Format: int64 */
            requests_filled: number;
            /** Format: int64 */
            requests_voted: number;
            /** Format: double */
            required_ratio: number;
            /** Format: int32 */
            seeding: number;
            /** Format: int64 */
            seeding_size: number;
            settings: unknown;
            /** Format: int32 */
            snatched: number;
            /** Format: int32 */
            torrent_comments: number;
            /** Format: int64 */
            uploaded: number;
            username: string;
        };
        UserCreatedAffiliatedArtist: {
            /** Format: int64 */
            artist_id: number;
            nickname?: string | null;
            roles: components["schemas"]["ArtistRole"][];
            /** Format: int64 */
            title_group_id: number;
        };
        UserCreatedArtist: {
            description: string;
            name: string;
            pictures: string[];
        };
        UserCreatedEditionGroup: {
            additional_information: {
                [key: string]: string;
            };
            covers: string[];
            description?: string | null;
            distributor?: string | null;
            external_links: string[];
            name: string;
            /** Format: date-time */
            release_date: string;
            source?: null | components["schemas"]["Source"];
            /** Format: int64 */
            title_group_id?: number | null;
        };
        UserCreatedMasterGroup: {
            name?: string | null;
        };
        UserCreatedSeries: {
            banners: string[];
            covers: string[];
            description: string;
            name: string;
            tags: string[];
        };
        UserCreatedTitleGroup: {
            affiliated_artists: {
                [key: string]: string;
            };
            category?: null | components["schemas"]["TitleGroupCategory"];
            content_type: components["schemas"]["ContentType"];
            country_from?: string | null;
            covers: string[];
            description: string;
            embedded_links: {
                [key: string]: string;
            };
            external_links: string[];
            /** Format: int64 */
            master_group_id?: number | null;
            name: string;
            name_aliases: string[];
            original_language?: string | null;
            /** Format: date-time */
            original_release_date: string;
            platform?: null | components["schemas"]["Platform"];
            screenshots: string[];
            /** Format: int64 */
            series_id?: number | null;
            tagline?: string | null;
            tags: string[];
        };
        UserCreatedTitleGroupComment: {
            /** Format: int64 */
            answers_to_comment_id?: number | null;
            content: string;
            /** Format: int64 */
            refers_to_torrent_id?: number | null;
            /** Format: int64 */
            title_group_id: number;
        };
        UserCreatedTorrentReport: {
            description: string;
            /** Format: int64 */
            reported_torrent_id: number;
        };
        UserCreatedTorrentRequest: {
            audio_channels?: string | null;
            audio_codec?: null | components["schemas"]["AudioCodec"];
            /** Format: int64 */
            bounty_bonus_points: number;
            /** Format: int64 */
            bounty_upload: number;
            container: string;
            description?: string | null;
            edition_name?: string | null;
            features?: components["schemas"]["Features"][] | null;
            languages?: components["schemas"]["Language"][] | null;
            release_group?: string | null;
            subtitle_languages?: components["schemas"]["Language"][] | null;
            /** Format: int64 */
            title_group_id: number;
            video_codec?: null | components["schemas"]["VideoCodec"];
            video_resolution?: string | null;
        };
        UserCreatedTorrentRequestVote: {
            /** Format: int64 */
            bounty_bonus_points: number;
            /** Format: int64 */
            bounty_upload: number;
            /** Format: int64 */
            torrent_request_id: number;
        };
        UserLite: {
            /** Format: int64 */
            id: number;
            username: string;
        };
        UserLiteAvatar: {
            avatar?: string | null;
            /** Format: int64 */
            id: number;
            username: string;
        };
        /** @enum {string} */
        VideoCodec: "mpeg1" | "mpeg2" | "Xvid" | "divX" | "h264" | "h265" | "vc-1" | "vp9" | "BD50" | "UHD100";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    add_affiliated_artists: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreatedAffiliatedArtist"][];
            };
        };
        responses: {
            /** @description Successfully created the artist affiliations */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AffiliatedArtist"][];
                };
            };
        };
    };
    get_artist_publications: {
        parameters: {
            query: {
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully got the artist's pulications */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArtistAndTitleGroupsLite"];
                };
            };
        };
    };
    add_artist: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreatedArtist"];
            };
        };
        responses: {
            /** @description Successfully created the artist */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Artist"];
                };
            };
        };
    };
    add_edition_group: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreatedEditionGroup"];
            };
        };
        responses: {
            /** @description Successfully created the edition_group */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EditionGroup"];
                };
            };
        };
    };
    send_invitation: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SentInvitation"];
            };
        };
        responses: {
            /** @description Successfully sent the invitation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Invitation"];
                };
            };
        };
    };
    login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Login"];
            };
        };
        responses: {
            /** @description Successfully logged in */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    add_master_group: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreatedMasterGroup"];
            };
        };
        responses: {
            /** @description Successfully created the master group */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MasterGroup"];
                };
            };
        };
    };
    get_me: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully got the user */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    register: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Register"];
            };
        };
        responses: {
            /** @description Successfully registered the user */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    add_torrent_report: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreatedTorrentReport"];
            };
        };
        responses: {
            /** @description Torrent successfully reported */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TorrentReport"];
                };
            };
        };
    };
    get_artists_lite: {
        parameters: {
            query: {
                name: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully got the artists and some data about them */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArtistLite"][];
                };
            };
        };
    };
    find_torrents: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TorrentSearch"];
            };
        };
        responses: {
            /** @description Title groups and their torrents found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TorrentSearchResults"];
                };
            };
        };
    };
    get_series: {
        parameters: {
            query: {
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully got the series */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SeriesAndTitleGroupHierarchyLite"];
                };
            };
        };
    };
    add_series: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreatedSeries"];
            };
        };
        responses: {
            /** @description Successfully created the series */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Series"];
                };
            };
        };
    };
    add_subscription: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                item_id: number;
                item: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully subscribed to the item */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    remove_subscription: {
        parameters: {
            query: {
                item_id: number;
                item: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully unsubscribed to the item */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_title_group: {
        parameters: {
            query: {
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully got the title_group */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TitleGroupAndAssociatedData"];
                };
            };
        };
    };
    add_title_group: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreatedTitleGroup"];
            };
        };
        responses: {
            /** @description Successfully created the title_group */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TitleGroup"];
                };
            };
        };
    };
    add_title_group_comment: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreatedTitleGroupComment"];
            };
        };
        responses: {
            /** @description Successfully posted the comment */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TitleGroupComment"];
                };
            };
        };
    };
    get_title_group_info_lite: {
        parameters: {
            query: {
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully got the title_group (lite info) */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TitleGroupLite"];
                };
            };
        };
    };
    download_dottorrent_file: {
        parameters: {
            query: {
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully downloaded the torrent file */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    upload_torrent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["UploadedTorrent"];
            };
        };
        responses: {
            /** @description Successfully uploaded the torrent */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Torrent"];
                };
            };
        };
    };
    add_torrent_request: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreatedTorrentRequest"];
            };
        };
        responses: {
            /** @description Successfully created the torrent_request */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TorrentRequest"];
                };
            };
        };
    };
    add_torrent_request_vote: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreatedTorrentRequestVote"];
            };
        };
        responses: {
            /** @description Successfully voted on the torrent_request */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TorrentRequestVote"];
                };
            };
        };
    };
    get_user: {
        parameters: {
            query: {
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully got the user */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PublicUser"];
                };
            };
        };
    };
}
